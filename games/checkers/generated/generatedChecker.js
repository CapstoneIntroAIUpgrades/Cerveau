// Generated by Creer at 01:45PM on September 12, 2015 UTC, git hash: '3f0e08b46657dff30d7c082da7471381f8a1ab62'
// Note: this file should never be modified, instead if you want to add game logic modify just the ../Checker.js file. This is to ease merging main.data changes

var serializer = require(__basedir + "/gameplay/serializer");
var Class = require(__basedir + "/utilities/class");
var GameObject = require("../gameObject");


// @class GeneratedChecker: The generated version of the Checker, that handles basic logic.
var GeneratedChecker = Class(GameObject, {
    init: function(data) {
        GameObject.init.apply(this, arguments);

        this.kinged = serializer.toBoolean(data.kinged === undefined ? false : data.kinged);
        this.owner = (data.owner === undefined ? null : data.owner);
        this.x = serializer.toInteger(data.x === undefined ? 0 : data.x);
        this.y = serializer.toInteger(data.y === undefined ? 0 : data.y);

        this._serializableKeys["kinged"] = true;
        this._serializableKeys["owner"] = true;
        this._serializableKeys["x"] = true;
        this._serializableKeys["y"] = true;
    },

    gameObjectName: "Checker",

    _runIsMine: function(player, data, asyncReturn) {
        var returned = this.isMine(player, asyncReturn);
        returned = serializer.toBoolean(returned);

        return {
            returned: returned,
            altersState: false,
        };
    },

    _runMove: function(player, data, asyncReturn) {
        var x = serializer.toInteger(data.x);
        var y = serializer.toInteger(data.y);

        var returned = this.move(player, x, y, asyncReturn);
        returned = (returned);

        return {
            returned: returned,
            altersState: true,
        };
    },

});

module.exports = GeneratedChecker;
