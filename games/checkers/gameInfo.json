{
    "AI": {
        "description": "The AI competitors will add logic to this AI so its functions return valid and smart values.",
        "function_names": [
            "runTurn"
        ],
        "functions": {
            "runTurn": {
                "altersState": true,
                "argument_names": [],
                "arguments": [],
                "description": "This is called every time the AI is asked to respond with a command during their turn",
                "returns": {
                    "default": true,
                    "description": "represents if you want to end your turn. true means end the turn, false means to keep your turn going and re-call runTurn()",
                    "type": {
                        "keyType": null,
                        "name": "boolean",
                        "valueType": null
                    }
                },
                "serverPredefined": true
            }
        }
    },
    "Game": {
        "attribute_names": [
            "boardHeight",
            "boardWidth",
            "checkerMoved",
            "checkerMovedJumped",
            "checkers",
            "currentPlayer",
            "currentTurn",
            "gameObjects",
            "maxTurns",
            "players",
            "session"
        ],
        "attributes": {
            "boardHeight": {
                "default": 8,
                "description": "The height of the board for the Y component of a checker.",
                "type": {
                    "keyType": null,
                    "name": "int",
                    "valueType": null
                }
            },
            "boardWidth": {
                "default": 8,
                "description": "The width of the board for X component of a checker.",
                "type": {
                    "keyType": null,
                    "name": "int",
                    "valueType": null
                }
            },
            "checkerMoved": {
                "default": null,
                "description": "The checker that last moved and must be moved because only one checker can move during each players turn.",
                "k-means": "sum",
                "type": {
                    "keyType": null,
                    "name": "Checker",
                    "valueType": null
                }
            },
            "checkerMovedJumped": {
                "default": null,
                "description": "If the last checker that moved jumped, meaning it can move again.",
                "k-means": "sum",
                "type": {
                    "keyType": null,
                    "name": "boolean",
                    "valueType": null
                }
            },
            "checkers": {
                "default": null,
                "description": "All the checkers currently in the game.",
                "type": {
                    "keyType": null,
                    "name": "list",
                    "valueType": {
                        "keyType": null,
                        "name": "Checker",
                        "valueType": null
                    }
                }
            },
            "currentPlayer": {
                "default": null,
                "description": "The player whose turn it is currently. That player can send commands. Other players cannot.",
                "serverPredefined": true,
                "type": {
                    "keyType": null,
                    "name": "Player",
                    "valueType": null
                }
            },
            "currentTurn": {
                "default": 0,
                "description": "The current turn number, starting at 0 for the first player's turn",
                "serverPredefined": true,
                "type": {
                    "keyType": null,
                    "name": "int",
                    "valueType": null
                }
            },
            "gameObjects": {
                "default": null,
                "description": "A mapping of every game object's ID to the actual game object. Primarily used by the server and client to easily refer to the game objects via ID.",
                "serverPredefined": true,
                "type": {
                    "keyType": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    },
                    "name": "dictionary",
                    "valueType": {
                        "keyType": null,
                        "name": "GameObject",
                        "valueType": null
                    }
                }
            },
            "maxTurns": {
                "default": 100,
                "description": "The maximum number of turns before the game will automatically end.",
                "serverPredefined": true,
                "type": {
                    "keyType": null,
                    "name": "int",
                    "valueType": null
                }
            },
            "players": {
                "default": null,
                "description": "List of all the players in the game.",
                "serverPredefined": true,
                "type": {
                    "keyType": null,
                    "name": "list",
                    "valueType": {
                        "keyType": null,
                        "name": "Player",
                        "valueType": null
                    }
                }
            },
            "session": {
                "default": null,
                "description": "A unique identifier for the game instance that is being played.",
                "serverPredefined": true,
                "type": {
                    "keyType": null,
                    "name": "string",
                    "valueType": null
                }
            }
        },
        "description": "The simple version of American Checkers. An 8x8 board with 12 checkers on each side that must move diagonally to the opposing side until kinged. Very simple.",
        "function_names": [],
        "functions": {},
        "inheritedAttributes": {},
        "inheritedFunctions": {},
        "maxInvalidsPerPlayer": 10,
        "name": "Checkers",
        "numberOfPlayers": 2,
        "parentClasses": [],
        "serverParentClasses": [
            "TurnBasedGame"
        ]
    },
    "gameObjects": {
        "Checker": {
            "attribute_names": [
                "kinged",
                "owner",
                "x",
                "y"
            ],
            "attributes": {
                "kinged": {
                    "default": false,
                    "description": "If the checker has been kinged and can move backwards.",
                    "k-means": "sum",
                    "type": {
                        "keyType": null,
                        "name": "boolean",
                        "valueType": null
                    }
                },
                "owner": {
                    "default": null,
                    "description": "The player that controls this Checker.",
                    "type": {
                        "keyType": null,
                        "name": "Player",
                        "valueType": null
                    }
                },
                "x": {
                    "default": null,
                    "description": "The x coordinate of the checker.",
                    "type": {
                        "keyType": null,
                        "name": "int",
                        "valueType": null
                    }
                },
                "y": {
                    "default": null,
                    "description": "The y coordinate of the checker.",
                    "type": {
                        "keyType": null,
                        "name": "int",
                        "valueType": null
                    }
                }
            },
            "description": "A checker on the game board.",
            "function_names": [
                "isMine",
                "move"
            ],
            "functions": {
                "isMine": {
                    "altersState": false,
                    "argument_names": [],
                    "arguments": [],
                    "description": "returns if the checker is owned by your player or not",
                    "returns": {
                        "default": null,
                        "description": "true if it is yours, false if it is not yours",
                        "type": {
                            "keyType": null,
                            "name": "boolean",
                            "valueType": null
                        }
                    },
                    "serverPredefined": false
                },
                "move": {
                    "altersState": true,
                    "argument_names": [
                        "x",
                        "y"
                    ],
                    "arguments": [
                        {
                            "default": null,
                            "description": "The x coordinate to move to.",
                            "name": "x",
                            "optional": false,
                            "type": {
                                "keyType": null,
                                "name": "int",
                                "valueType": null
                            }
                        },
                        {
                            "default": null,
                            "description": "The y coordinate to move to.",
                            "name": "y",
                            "optional": false,
                            "type": {
                                "keyType": null,
                                "name": "int",
                                "valueType": null
                            }
                        }
                    ],
                    "description": "Moves the checker from its current location to the given (x, y).",
                    "returns": {
                        "default": null,
                        "description": "Returns the same checker that moved if the move was successful. null otherwise.",
                        "type": {
                            "keyType": null,
                            "name": "Checker",
                            "valueType": null
                        }
                    },
                    "serverPredefined": false
                }
            },
            "inheritedAttributes": {
                "gameObjectName": {
                    "default": null,
                    "description": "String representing the top level Class that this game object is an instance of. Used for reflection to create new instances on clients, but exposed for convenience should AIs want this data.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "id": {
                    "default": null,
                    "description": "A unique id for each instance of a GameObject or a sub class. Used for client and server communication. Should never change value after being set.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "logs": {
                    "default": null,
                    "description": "Any strings logged will be stored here when this game object logs the strings. Intended for debugging.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "list",
                        "valueType": {
                            "keyType": null,
                            "name": "string",
                            "valueType": null
                        }
                    }
                }
            },
            "inheritedFunctions": {
                "log": {
                    "altersState": true,
                    "argument_names": [
                        "message"
                    ],
                    "arguments": [
                        {
                            "default": null,
                            "description": "A string to add to this GameObject's log. Intended for debugging.",
                            "name": "message",
                            "optional": false,
                            "type": {
                                "keyType": null,
                                "name": "string",
                                "valueType": null
                            }
                        }
                    ],
                    "description": "adds a message to this game object's log. Intended for debugging purposes.",
                    "inheritedFrom": "GameObject",
                    "returns": null,
                    "serverPredefined": true
                }
            },
            "parentClasses": [
                "GameObject"
            ],
            "serverParentClasses": []
        },
        "GameObject": {
            "attribute_names": [
                "gameObjectName",
                "id",
                "logs"
            ],
            "attributes": {
                "gameObjectName": {
                    "default": null,
                    "description": "String representing the top level Class that this game object is an instance of. Used for reflection to create new instances on clients, but exposed for convenience should AIs want this data.",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "id": {
                    "default": null,
                    "description": "A unique id for each instance of a GameObject or a sub class. Used for client and server communication. Should never change value after being set.",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "logs": {
                    "default": null,
                    "description": "Any strings logged will be stored here when this game object logs the strings. Intended for debugging.",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "list",
                        "valueType": {
                            "keyType": null,
                            "name": "string",
                            "valueType": null
                        }
                    }
                }
            },
            "description": "An object in the game. The most basic class that all game classes should inherit from automatically.",
            "function_names": [
                "log"
            ],
            "functions": {
                "log": {
                    "altersState": true,
                    "argument_names": [
                        "message"
                    ],
                    "arguments": [
                        {
                            "default": null,
                            "description": "A string to add to this GameObject's log. Intended for debugging.",
                            "name": "message",
                            "optional": false,
                            "type": {
                                "keyType": null,
                                "name": "string",
                                "valueType": null
                            }
                        }
                    ],
                    "description": "adds a message to this game object's log. Intended for debugging purposes.",
                    "returns": null,
                    "serverPredefined": true
                }
            },
            "inheritedAttributes": {},
            "inheritedFunctions": {},
            "parentClasses": [],
            "serverParentClasses": [
                "BaseGameObject"
            ]
        },
        "Player": {
            "attribute_names": [
                "checkers",
                "clientType",
                "lost",
                "name",
                "reasonLost",
                "reasonWon",
                "timeRemaining",
                "won",
                "yDirection"
            ],
            "attributes": {
                "checkers": {
                    "default": null,
                    "description": "All the checkers currently in the game owned by this player",
                    "type": {
                        "keyType": null,
                        "name": "list",
                        "valueType": {
                            "keyType": null,
                            "name": "Checker",
                            "valueType": null
                        }
                    }
                },
                "clientType": {
                    "default": null,
                    "description": "What type of client this is, e.g. 'Python', 'JavaScript', or some other language. For potential data mining purposes.",
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "lost": {
                    "default": false,
                    "description": "if the player lost the game or not",
                    "type": {
                        "keyType": null,
                        "name": "boolean",
                        "valueType": null
                    }
                },
                "name": {
                    "default": "Anonymous",
                    "description": "The name of the player",
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "reasonLost": {
                    "default": null,
                    "description": "the reason why the player lost the game",
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "reasonWon": {
                    "default": null,
                    "description": "the reason why the player won the game",
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "timeRemaining": {
                    "default": null,
                    "description": "The amount of time (in ns) remaining for this AI to send commands.",
                    "type": {
                        "keyType": null,
                        "name": "float",
                        "valueType": null
                    }
                },
                "won": {
                    "default": false,
                    "description": "if the player won the game or not",
                    "type": {
                        "keyType": null,
                        "name": "boolean",
                        "valueType": null
                    }
                },
                "yDirection": {
                    "default": null,
                    "description": "The direction your checkers must go along the y-axis until kinged",
                    "type": {
                        "keyType": null,
                        "name": "int",
                        "valueType": null
                    }
                }
            },
            "description": "A player in this game. Every AI controls one player.",
            "function_names": [],
            "functions": {},
            "inheritedAttributes": {
                "gameObjectName": {
                    "default": null,
                    "description": "String representing the top level Class that this game object is an instance of. Used for reflection to create new instances on clients, but exposed for convenience should AIs want this data.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "id": {
                    "default": null,
                    "description": "A unique id for each instance of a GameObject or a sub class. Used for client and server communication. Should never change value after being set.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "string",
                        "valueType": null
                    }
                },
                "logs": {
                    "default": null,
                    "description": "Any strings logged will be stored here when this game object logs the strings. Intended for debugging.",
                    "inheritedFrom": "GameObject",
                    "serverPredefined": true,
                    "type": {
                        "keyType": null,
                        "name": "list",
                        "valueType": {
                            "keyType": null,
                            "name": "string",
                            "valueType": null
                        }
                    }
                }
            },
            "inheritedFunctions": {
                "log": {
                    "altersState": true,
                    "argument_names": [
                        "message"
                    ],
                    "arguments": [
                        {
                            "default": null,
                            "description": "A string to add to this GameObject's log. Intended for debugging.",
                            "name": "message",
                            "optional": false,
                            "type": {
                                "keyType": null,
                                "name": "string",
                                "valueType": null
                            }
                        }
                    ],
                    "description": "adds a message to this game object's log. Intended for debugging purposes.",
                    "inheritedFrom": "GameObject",
                    "returns": null,
                    "serverPredefined": true
                }
            },
            "parentClasses": [
                "GameObject"
            ],
            "serverParentClasses": []
        }
    }
}