// ${header}
// Note: this is the file you should modify. The logic generated by Creer should be mostly in ./generated/
<%include file="generated/functions.noCreer" />
var Class = require("../../utilities/class");
var Generated${obj_key} = require("./generated/generated${obj_key}");

// @class ${obj_key}: ${obj['description']}
var ${obj_key} = Class(Generated${obj_key}, {
	init: function(data) {
		Generated${obj_key}.init.apply(this, arguments);

		// put any initialization logic here. the base variables should be set from 'data' in Generated${obj_key}'s init function
% if obj_key == "Game":
		// NOTE: no players are connected at this point.
% endif
	},

% if obj_key == "Game":
	/// this is called when the game begins, once players are connected and ready to play. Anything in init() will not have players to assign units to.
	begin: function() {
		Generated${obj_key}.begin.apply(this, arguments);
	},

% endif
% for function_name, function_parms in obj['functions'].items():
<%
	if 'serverPredefined' in function_parms and function_parms['serverPredefined']:
		continue
%>
	/// ${function_parms['description']}
% if 'arguments' in function_parms:
% for arg_parms in function_parms['arguments']:
	// @param <${arg_parms['type']}> ${arg_parms['name']}: ${arg_parms['description']}
% endfor
% endif
% if function_parms['returns'] == None:
	// @returns undefined
% else:
	// @returns {${shared['js']['type'](function_parms['returns']['type'])}} ${function_parms['returns']['description']}
% endif
	${function_name}: function(player${", ".join([""] + function_parms["argumentNames"])}) {
		// Put your game logic for the ${obj_key}'s ${function_name} function here.
		return ${shared['js']['default'](function_parms['returns']['type'])};
	},
% endfor
});

module.exports = ${obj_key};
